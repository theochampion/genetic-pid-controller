{"version":3,"sources":["simulator/pid_controller.js","simulator/vehicle.js","simulator/scene.js","simulator/simulator_engine.js","genetic/selectors.js","genetic/genetic.js","utils/string.js","utils/math.js","genetic/genetic_config.js","simulator/simulator_renderer.js","components/logo.js","components/stat_line.js","components/overlay.js","components/settings_panel.js","components/setting_input.js","components/divider.js","components/button.js","components/author.js","components/vis_panel.js","components/genome_vis.js","components/evol_perc_vis.js","components/stat_plot.js","utils/misc.js","App.js","serviceWorker.js","index.js"],"names":["PIDController","k_p","k_i","k_d","dt","Object","classCallCheck","this","i_max","sumError","lastError","lastTime","target","currentValue","currentTime","Date","now","error","Math","abs","sumSign","dError","vehicle","xx","yy","width","height","wheelYOffset","body","Bodies","rectangle","collisionFilter","group","chamfer","radius","density","label","wheel","circle","friction","axelA","Constraint","create","bodyB","pointB","x","y","bodyA","stiffness","length","composite","Composite","addBody","addConstraint","collidableBodyId","id","correctionFactor","Body","setAngularVelocity","angle","Scene","wallOptions","isSensor","isStatic","rightWall","leftWall","topWall","bottomWall","render","visible","rotationStep","rotationFactor","walls","add","spike2","polygon","spike3","spike4","allBodies","forEach","setAngle","PI","ts","_this","rotate","SimulatorEngine","vehicles","engine","Engine","simulationWidth","window","innerWidth","simulationHeight","innerHeight","Events","on","event","pairs","pair","item","index","object","obj","resolver","stepCount","splice","scene","rotateRandomly","getBodyAngle","setWheelAngularVelocity","controller","update","World","world","runner","Runner","isFixed","run","reset","p","i","d","vehicleObj","Vehicle","setTarget","resPromise","Promise","resolve","reject","promiseResolver","push","remove","filter","_this2","enabled","individualSelectors","tournament2","population","optimizer","n","a","floor","random","b","fitness","genome","tournament3","c","best","fittest","parentsSelectors","fittestRandom","optimizers","maximize","minimize","defaultConfig","iterations","Infinity","population_size","mutation_rate","crossover_rate","fittestAlwaysSurvive","Genetic","newIndividualFromGenome","shouldApplyFromRate","rate","stopFlag","seed","mutate","crossover","optimize","generation","notification","selectParents","selectIndividual","config","objectSpread","gen","map","_ref","asyncToGenerator","regenerator_default","mark","_callee","individual","wrap","_context","prev","next","t0","sent","t1","abrupt","stop","_x2","apply","arguments","preFitnessEval","all","sort","newPopulation","parents","childrens","concat","children","indiv","decodeFloatsFromBinaryStr","binStr","floatNb","number","in_min","in_max","out_min","paramBitLength","decoded","parseInt","substr","Number","MAX_SAFE_INTEGER","bitLength","toString","PIDParams","chromosome","PIDParam","str","repeat","string","replace","flipIndex","substring","mother","father","ca","cb","tmp","Canvas","styled","canvas","_templateObject","SimulatorRenderer","props","possibleConstructorReturn","getPrototypeOf","call","canvasRef","React","createRef","current","addEventListener","Render","options","wireframes","showAngleIndicator","showCollisions","showIds","showDebug","mouse","Mouse","mouseConstraint","MouseConstraint","constraint","react_default","createElement","ref","Component","Wrapper","div","logo_templateObject","LogoWrapper","_templateObject2","LogoText","_templateObject3","GitHubLogoWrapper","_templateObject4","GitHubLogoSvg","svg","_templateObject5","Logo","href","version","xmlns","xmlnsXlink","viewBox","xmlSpace","style","fill","StatLine","stat_line_templateObject","Overlay","overlay_templateObject","SettingsPanel","settings_panel_templateObject","SettingInputLineWrapper","setting_input_templateObject","SettingName","setting_input_templateObject2","SettingInput","input","setting_input_templateObject3","SettingSelect","select","setting_input_templateObject4","SettingSelectOption","option","setting_input_templateObject5","SettingInputLine","text","name","value","disabled","onChange","undefined","key","Divider","divider_templateObject","Button","button","button_templateObject","AuthorWrapper","author_templateObject","AuthorLink","author_templateObject2","Author","role","aria-label","VisPanel","vis_panel_templateObject","GenVisContainer","genome_vis_templateObject","GenBitChange","span","genome_vis_templateObject2","color","change_color_lookup","GenomeEvolutionVis","genomes","_genomes$slice","slice","current_genome","slicedToArray","genome_history","reverse","current_params","params_history","Fragment","stat_line","Array","from","bit","bit_idx","lastChange","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","done","_ref4","_ref3","gen_idx","err","return","param","param_idx","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref7","_ref6","ex_p_idx","toFixed","NegPerc","evol_perc_vis_templateObject","EvolPercVis","perc","StatPlotContainer","stat_plot_templateObject","StatPlot","best_fitness_data","avg_fitness_data","es","data","curve","opacity","strokeStyle","strokeWidth","title","line","stroke","ticks","fontWeight","getLastItem","arr","getFitnessStatPercIncrease","statsToCSVFile","avg","csv","idx","console","log","encodeURI","settings","default_seed","App","_runSimulation","setState","avg_fitness_stat","best_fitness_stat","best_genomes","seedrandom","state","random_seed","global","geneticEngine","parseFloat","simulationRunning","_stopSimulation","simulatorEngine","_handleSettingChange","e","defineProperty","_downloadStatsAsCSV","encodedCSV","exportName","indiv_selector","parent_selector","link","document","setAttribute","appendChild","click","removeChild","isMobile","pv","toConsumableArray","reduce","_decodeFloatsFromBina","_decodeFloatsFromBina2","p_gain","i_gain","d_gain","addVehicle","_x","overlay","settings_panel","logo","author","divider","setting_input","keys","_ref2","components_button","onClick","vis_panel","evol_perc_vis","stat_plot","genome_vis","simulator_renderer_SimulatorRenderer","Boolean","location","hostname","match","ReactDOM","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5f1eab2.chunk.js","sourcesContent":["export default class PIDController {\n\tconstructor(k_p, k_i, k_d, dt) {\n\t\tlet i_max;\n\n\t\t// PID constants\n\t\tthis.k_p = typeof k_p === \"number\" ? k_p : 1;\n\t\tthis.k_i = k_i || 0;\n\t\tthis.k_d = k_d || 0;\n\n\t\t// Interval of time between two updates\n\t\t// If not set, it will be automatically calculated\n\t\tthis.dt = dt || 0;\n\n\t\t// Maximum absolute value of sumError\n\t\tthis.i_max = i_max || 0;\n\n\t\tthis.sumError = 0;\n\t\tthis.lastError = 0;\n\t\tthis.lastTime = 0;\n\n\t\tthis.target = 0; // default value, can be modified with .setTarget\n\t}\n\n\tsetTarget(target) {\n\t\tthis.target = target;\n\t}\n\n\tupdate(currentValue) {\n\t\tthis.currentValue = currentValue;\n\n\t\t// Calculate dt\n\t\tlet dt = this.dt;\n\t\tif (!dt) {\n\t\t\tlet currentTime = Date.now();\n\t\t\tif (this.lastTime === 0) {\n\t\t\t\t// First time update() is called\n\t\t\t\tdt = 0;\n\t\t\t} else {\n\t\t\t\tdt = (currentTime - this.lastTime) / 1000; // in seconds\n\t\t\t}\n\t\t\tthis.lastTime = currentTime;\n\t\t}\n\t\tif (typeof dt !== \"number\" || dt === 0) {\n\t\t\tdt = 1;\n\t\t}\n\n\t\tlet error = this.target - this.currentValue;\n\t\tthis.sumError = this.sumError + error * dt;\n\t\tif (this.i_max > 0 && Math.abs(this.sumError) > this.i_max) {\n\t\t\tlet sumSign = this.sumError > 0 ? 1 : -1;\n\t\t\tthis.sumError = sumSign * this.i_max;\n\t\t}\n\n\t\tlet dError = (error - this.lastError) / dt;\n\t\tthis.lastError = error;\n\n\t\treturn this.k_p * error + this.k_i * this.sumError + this.k_d * dError;\n\t}\n\n\treset() {\n\t\tthis.sumError = 0;\n\t\tthis.lastError = 0;\n\t\tthis.lastTime = 0;\n\t}\n}\n","import { Body, Bodies, Composite, Constraint } from \"matter-js\";\n\n/**\n * Creates a composite with simple vehicle setup of bodies and constraints.\n * @method vehicle\n * @param {number} xx\n * @param {number} yy\n * @param {number} width\n * @param {number} height\n * @return {composite} A new composite vehicle body\n */\nexport default class vehicle {\n\tconstructor(xx, yy, width, height) {\n\t\tconst wheelToBodyRatio = 2.3;\n\t\tconst wheelXOffset = 0;\n\t\tconst wheelYOffset = height / 2;\n\n\t\tthis.body = Bodies.rectangle(\n\t\t\txx,\n\t\t\tyy - width / wheelToBodyRatio,\n\t\t\twidth,\n\t\t\theight,\n\t\t\t{\n\t\t\t\tcollisionFilter: {\n\t\t\t\t\tgroup: -1\n\t\t\t\t},\n\t\t\t\tchamfer: {\n\t\t\t\t\tradius: 10\n\t\t\t\t},\n\t\t\t\tdensity: 0.0002,\n\t\t\t\tlabel: \"vehicle_body\"\n\t\t\t}\n\t\t);\n\n\t\tthis.wheel = Bodies.circle(\n\t\t\txx + wheelXOffset,\n\t\t\tyy + wheelYOffset,\n\t\t\twidth / wheelToBodyRatio,\n\t\t\t{\n\t\t\t\tcollisionFilter: {\n\t\t\t\t\tgroup: -1\n\t\t\t\t},\n\t\t\t\tfriction: 0.8,\n\t\t\t\tlabel: \"vehicle_wheel\"\n\t\t\t}\n\t\t);\n\n\t\tconst axelA = Constraint.create({\n\t\t\tbodyB: this.body,\n\t\t\tpointB: { x: wheelXOffset, y: wheelYOffset },\n\t\t\tbodyA: this.wheel,\n\t\t\tstiffness: 1,\n\t\t\tlength: 0\n\t\t});\n\n\t\tthis.composite = Composite.create({\n\t\t\tlabel: \"vehicle\"\n\t\t});\n\t\tComposite.addBody(this.composite, this.body);\n\t\tComposite.addBody(this.composite, this.wheel);\n\t\tComposite.addConstraint(this.composite, axelA);\n\t\tthis.collidableBodyId = this.body.id;\n\t}\n\n\tsetWheelAngularVelocity(correctionFactor) {\n\t\tBody.setAngularVelocity(this.wheel, -correctionFactor);\n\t}\n\n\tgetBodyAngle() {\n\t\treturn this.body.angle;\n\t}\n}\n","import { Composite, Body, Bodies } from \"matter-js\";\n\nexport default class Scene {\n\tconstructor(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tconst wallOptions = {\n\t\t\tisSensor: true,\n\t\t\tisStatic: true\n\t\t};\n\t\tconst rightWall = Bodies.rectangle(\n\t\t\twidth / 2 + height / 2,\n\t\t\theight / 2,\n\t\t\t1,\n\t\t\theight,\n\t\t\twallOptions\n\t\t);\n\t\tconst leftWall = Bodies.rectangle(\n\t\t\twidth / 2 - height / 2,\n\t\t\theight / 2,\n\t\t\t1,\n\t\t\theight,\n\t\t\twallOptions\n\t\t);\n\t\tconst topWall = Bodies.rectangle(width / 2, 0, height, 1, wallOptions);\n\t\tconst bottomWall = Bodies.rectangle(\n\t\t\twidth / 2,\n\t\t\theight,\n\t\t\theight,\n\t\t\t1,\n\t\t\twallOptions\n\t\t);\n\t\trightWall.render.visible = false;\n\t\tleftWall.render.visible = false;\n\t\ttopWall.render.visible = false;\n\t\tbottomWall.render.visible = false;\n\n\t\tthis.rotationStep = 0.0;\n\t\tthis.rotationFactor = 0.000015;\n\n\t\tthis.walls = Composite.create({ label: \"walls\" });\n\t\tComposite.add(this.walls, [leftWall, rightWall, topWall, bottomWall]);\n\n\t\tthis.wheel = Composite.create({ label: \"wheel\" });\n\n\t\tthis.spike2 = Bodies.polygon(width / 2, height * 1.7, 4, height, {\n\t\t\tisStatic: true,\n\t\t\tfriction: 0.8,\n\t\t\tchamfer: { radius: 70 }\n\t\t});\n\t\tthis.spike3 = Bodies.polygon(width / 2, height * 1.7, 6, height, {\n\t\t\tisStatic: true,\n\t\t\tfriction: 0.8,\n\t\t\tchamfer: { radius: 70 }\n\t\t});\n\t\tthis.spike4 = Bodies.polygon(width / 2, height * 1.7, 7, height, {\n\t\t\tisStatic: true,\n\t\t\tfriction: 0.8,\n\t\t\tchamfer: { radius: 100 }\n\t\t});\n\t\t//Body.setAngle(this.mainWheel, -Math.PI / 2);\n\t\tComposite.add(this.wheel, [\n\t\t\t// this.mainWheel,\n\t\t\t// this.spike,\n\t\t\tthis.spike2,\n\t\t\tthis.spike3,\n\t\t\tthis.spike4\n\t\t]);\n\t\tthis.composite = Composite.create({ label: \"scene\" });\n\t\tComposite.add(this.composite, [this.walls, this.wheel]);\n\t}\n\n\treset() {\n\t\tComposite.allBodies(this.wheel).forEach(body => {\n\t\t\tBody.setAngle(body, -Math.PI / 2);\n\t\t});\n\t\tthis.rotationStep = 0.0;\n\t\tthis.rotationFactor = 0.000015;\n\t}\n\trotateRandomly(ts) {\n\t\t//const stepSpeed = bezier(this.rotationFactor, 0.41, 0.01, 0.14, 0.98) / 100; //this.rotationFactor;\n\t\tthis.rotationStep += this.rotationFactor;\n\t\t//console.log(this.rotationFactor);\n\t\t//console.log(bezier(this.rotationFactor, 0.25, 0.46, 0.45, 0.94));\n\t\tComposite.allBodies(this.wheel).forEach(body => {\n\t\t\tBody.rotate(body, this.rotationStep);\n\t\t\tBody.setAngularVelocity(body, this.rotationStep);\n\t\t});\n\t\tif (this.rotationFactor > 0.00000001) this.rotationFactor -= 0.00000001;\n\t}\n}\n","import { Engine, Runner, Events, World, Composite } from \"matter-js\";\nimport PIDController from \"./pid_controller\";\n\n// objects\nimport Vehicle from \"./vehicle\";\nimport Scene from \"./scene\";\n\nexport default class SimulatorEngine {\n\tconstructor() {\n\t\tthis.vehicles = [];\n\t\tthis.engine = Engine.create();\n\t\tthis.simulationWidth = window.innerWidth;\n\t\tthis.simulationHeight = window.innerHeight;\n\n\t\tEvents.on(this.engine, \"collisionStart\", event => {\n\t\t\tevent.pairs.forEach(pair => {\n\t\t\t\tthis.vehicles.forEach((item, index, object) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpair.bodyA.id === item.obj.collidableBodyId ||\n\t\t\t\t\t\tpair.bodyB.id === item.obj.collidableBodyId\n\t\t\t\t\t) {\n\t\t\t\t\t\titem.resolver(item.stepCount);\n\t\t\t\t\t\tobject.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tEvents.on(this.engine, \"beforeUpdate\", event => {\n\t\t\tthis.scene.rotateRandomly();\n\t\t\tthis.vehicles.forEach(vehicle => {\n\t\t\t\tvehicle.stepCount += 1 - Math.abs(vehicle.obj.getBodyAngle());\n\t\t\t\tvehicle.obj.setWheelAngularVelocity(\n\t\t\t\t\tvehicle.controller.update(vehicle.obj.getBodyAngle())\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\n\t\tthis.scene = new Scene(this.simulationWidth, this.simulationHeight);\n\t\tWorld.add(this.engine.world, [this.scene.composite]);\n\t\tthis.runner = Runner.create({ isFixed: true });\n\t\tRunner.run(this.runner, this.engine);\n\t}\n\n\treset() {\n\t\tthis.scene.reset();\n\t}\n\n\tstop() {\n\t\t// resolve all running vehicles\n\t\tthis.vehicles.forEach(vehicle => vehicle.resolver(vehicle.stepCount));\n\t}\n\n\tasync addVehicle(p, i, d) {\n\t\tconst vehicleObj = new Vehicle(\n\t\t\tthis.simulationWidth / 2,\n\t\t\tthis.simulationHeight / 2,\n\t\t\tthis.simulationHeight / 5,\n\t\t\tthis.simulationHeight / 3\n\t\t);\n\t\tconst controller = new PIDController(p, i, d, 1);\n\t\tcontroller.setTarget(0);\n\t\tlet promiseResolver;\n\t\tvar resPromise = new Promise(function(resolve, reject) {\n\t\t\tpromiseResolver = resolve;\n\t\t});\n\t\tconst vehicle = {\n\t\t\tobj: vehicleObj,\n\t\t\tcontroller: controller,\n\t\t\tresolver: promiseResolver,\n\t\t\tstepCount: 0\n\t\t};\n\t\tthis.vehicles.push(vehicle);\n\n\t\tconst stepCount = await resPromise;\n\t\tComposite.remove(this.engine.world, vehicle.obj.composite);\n\t\tthis.vehicles = this.vehicles.filter(item => item !== vehicle);\n\t\treturn stepCount;\n\t}\n\n\trun() {\n\t\tthis.runner.enabled = false;\n\t\tthis.scene.reset();\n\t\tthis.vehicles.forEach(vehicle => {\n\t\t\tWorld.add(this.engine.world, [vehicle.obj.composite]);\n\t\t});\n\t\tthis.runner.enabled = true;\n\t}\n}\n","/**\n * Individual selectors for crossover and mutation operations\n */\nexport const individualSelectors = {\n\ttournament2: (population, optimizer) => {\n\t\tconst n = population.length;\n\t\tconst a = population[Math.floor(Math.random() * n)];\n\t\tconst b = population[Math.floor(Math.random() * n)];\n\t\treturn optimizer(a.fitness, b.fitness) ? a.genome : b.genome;\n\t},\n\ttournament3: (population, optimizer) => {\n\t\tconst n = population.length;\n\t\tconst a = population[Math.floor(Math.random() * n)];\n\t\tconst b = population[Math.floor(Math.random() * n)];\n\t\tconst c = population[Math.floor(Math.random() * n)];\n\t\tlet best = optimizer(a.fitness, b.fitness) ? a : b;\n\t\tbest = optimizer(best.fitness, c.fitness) ? best : c;\n\t\treturn best.genome;\n\t},\n\tfittest: (population, optimizer) => population[0].genome,\n\trandom: (population, optimizer) =>\n\t\tpopulation[Math.floor(Math.random() * population.length)].genome\n};\n\n/**\n * Parents selector for crossover operation\n */\nexport const parentsSelectors = {\n\ttournament2: (population, optimizer) => [\n\t\tindividualSelectors.tournament2(population, optimizer),\n\t\tindividualSelectors.tournament2(population, optimizer)\n\t],\n\ttournament3: (population, optimizer) => [\n\t\tindividualSelectors.tournament3(population, optimizer),\n\t\tindividualSelectors.tournament3(population, optimizer)\n\t],\n\trandom: population => [\n\t\tindividualSelectors.random(population),\n\t\tindividualSelectors.random(population)\n\t],\n\tfittestRandom: population => [\n\t\tindividualSelectors.fittest(population),\n\t\tindividualSelectors.random(population)\n\t]\n};\n","import { individualSelectors, parentsSelectors } from \"./selectors\";\n\nexport const optimizers = {\n\tmaximize: (a, b) => a >= b,\n\tminimize: (a, b) => a < b\n};\n\nconst defaultConfig = {\n\titerations: Infinity,\n\tpopulation_size: 100,\n\tmutation_rate: 0.03,\n\tcrossover_rate: 0.6,\n\tfittestAlwaysSurvive: true\n};\nexport default class Genetic {\n\tconstructor() {\n\t\t// internals\n\t\tthis.population = [];\n\t\tthis.stopFlag = false;\n\n\t\t// population functions\n\t\tthis.fitness = null;\n\t\tthis.seed = null;\n\t\tthis.mutate = null;\n\t\tthis.crossover = null;\n\t\tthis.optimize = optimizers.maximize;\n\t\tthis.generation = null;\n\t\tthis.notification = null;\n\t\t// selection functions\n\t\tthis.selectParents = parentsSelectors.tournament3;\n\t\tthis.selectIndividual = individualSelectors.tournament3;\n\t}\n\n\tnewIndividualFromGenome = genome => ({\n\t\tfitness: 0,\n\t\tgenome\n\t});\n\n\tshouldApplyFromRate = rate => Math.random() <= rate;\n\n\tstop() {\n\t\tthis.stopFlag = true;\n\t}\n\n\tasync run(config) {\n\t\tthis.config = { ...defaultConfig, ...config };\n\t\t// seed population\n\t\tfor (let i = 0; i < this.config.population_size; ++i)\n\t\t\tthis.population.push(this.newIndividualFromGenome(this.seed()));\n\n\t\tthis.generation(0, this.population);\n\n\t\t// main loop\n\t\tfor (let gen = 0; gen < this.config.iterations && !this.stopFlag; ++gen) {\n\t\t\tthis.population = this.population.map(async individual => {\n\t\t\t\treturn {\n\t\t\t\t\tfitness: await this.fitness(individual.genome),\n\t\t\t\t\tgenome: individual.genome\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tif (this.preFitnessEval) this.preFitnessEval();\n\t\t\tthis.population = await Promise.all(this.population);\n\t\t\tthis.population.sort((a, b) =>\n\t\t\t\tthis.optimize(a.fitness, b.fitness) ? -1 : 1\n\t\t\t);\n\n\t\t\t// user controlled stop\n\t\t\tthis.generation(gen, this.population);\n\n\t\t\t// evolve population\n\t\t\tlet newPopulation = [];\n\n\t\t\t// if option specified, keep fittest individual (elitism)\n\t\t\tif (this.config.fittestAlwaysSurvive)\n\t\t\t\tnewPopulation.push(this.population[0]);\n\n\t\t\t// generate next population round\n\t\t\twhile (newPopulation.length < this.config.population_size) {\n\t\t\t\tif (\n\t\t\t\t\tthis.crossover &&\n\t\t\t\t\tthis.shouldApplyFromRate(this.config.crossover_rate) &&\n\t\t\t\t\tnewPopulation.length + 1 < this.config.population_size\n\t\t\t\t) {\n\t\t\t\t\tconst parents = this.selectParents(this.population, this.optimize);\n\t\t\t\t\tconst childrens = this.crossover(parents[0], parents[1]);\n\t\t\t\t\tnewPopulation.concat(\n\t\t\t\t\t\tchildrens.map(children => {\n\t\t\t\t\t\t\tif (this.shouldApplyFromRate(this.config.mutation_rate))\n\t\t\t\t\t\t\t\tchildren = this.mutate(children);\n\t\t\t\t\t\t\treturn this.newIndividualFromGenome(children);\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tlet indiv = this.selectIndividual(this.population, this.optimize);\n\t\t\t\t\tif (this.shouldApplyFromRate(this.config.mutation_rate))\n\t\t\t\t\t\tindiv = this.mutate(indiv);\n\t\t\t\t\tnewPopulation.push(this.newIndividualFromGenome(indiv));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.population = newPopulation;\n\t\t}\n\n\t\t// cleanup\n\t\tthis.population = [];\n\t\tthis.stopFlag = false;\n\t}\n}\n","import { lerp } from \"./math\";\n\nexport const addLeadingZeros = (str, targetLength) => {\n\treturn \"0\".repeat(targetLength - str.length) + str;\n};\n\nexport const decodeFloatsFromBinaryStr = (binStr, floatNb) => {\n\tconst paramBitLength = binStr.length / floatNb;\n\tlet decoded = [];\n\tfor (let i = 0; i < binStr.length; i += paramBitLength)\n\t\tdecoded.push(\n\t\t\tlerp(\n\t\t\t\tparseInt(binStr.substr(i, paramBitLength), 2),\n\t\t\t\t0,\n\t\t\t\tNumber.MAX_SAFE_INTEGER,\n\t\t\t\t0.0,\n\t\t\t\t1.0\n\t\t\t)\n\t\t);\n\treturn decoded;\n};\n\nexport const hashCode = str =>\n\tstr\n\t\t.split(\"\")\n\t\t.reduce(\n\t\t\t(prevHash, currVal) =>\n\t\t\t\t((prevHash << 5) - prevHash + currVal.charCodeAt(0)) | 0,\n\t\t\t0\n\t\t);\n","export const lerp = (number, in_min, in_max, out_min, out_max) => {\n\treturn (\n\t\t((number - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n\t);\n};\n\nexport const increasePerc = (a, b) => ((a - b) / b) * 100;\n","import { addLeadingZeros } from \"../utils/string\";\n\nconst bitLength = Number.MAX_SAFE_INTEGER.toString(2).length;\n\n/**\n * Seed intitial population with random chromosomes\n */\nexport const seed = () => {\n\tconst PIDParams = [Math.random(), Math.random(), Math.random()];\n\tlet chromosome = \"\";\n\tPIDParams.forEach(PIDParam => {\n\t\tchromosome += addLeadingZeros(\n\t\t\tMath.floor(PIDParam * Number.MAX_SAFE_INTEGER).toString(2),\n\t\t\tbitLength\n\t\t);\n\t});\n\treturn chromosome;\n};\n\n/**\n * Perform random bit flip mutation\n * @param {String} chromosome Individual's chromosome\n */\nexport const mutate = chromosome => {\n\tconst flipIndex = Math.floor(Math.random() * chromosome.length);\n\tfunction replaceAt(string, index, replace) {\n\t\treturn string.substring(0, index) + replace + string.substring(index + 1);\n\t}\n\treturn replaceAt(\n\t\tchromosome,\n\t\tflipIndex,\n\t\tchromosome[flipIndex] === \"1\" ? \"0\" : \"1\"\n\t);\n};\n\n/**\n * Perform random two-point crossover\n * @param {Object} mother Selected mother chromosome\n * @param {Object} father Selected father chromosome\n */\nexport const crossover = (mother, father) => {\n\t// two-point crossover\n\tlet ca = Math.floor(Math.random() * mother.length);\n\tlet cb = Math.floor(Math.random() * mother.length);\n\tif (ca > cb) {\n\t\tconst tmp = cb;\n\t\tcb = ca;\n\t\tca = tmp;\n\t}\n\n\tconst son =\n\t\tfather.substr(0, ca) + mother.substr(ca, cb - ca) + father.substr(cb);\n\tconst daughter =\n\t\tmother.substr(0, ca) + father.substr(ca, cb - ca) + mother.substr(cb);\n\n\treturn [son, daughter];\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { World, Mouse, MouseConstraint, Render } from \"matter-js\";\n\nconst Canvas = styled.canvas`\n\tz-index: 1;\n\tposition: absolute;\n`;\n\nexport default class SimulatorRenderer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.canvasRef = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tlet canvas = this.canvasRef.current;\n\t\tcanvas.width = window.innerWidth;\n\t\tcanvas.height = window.innerHeight;\n\n\t\twindow.addEventListener(\"resize\", () => {\n\t\t\tthis.canvasRef.current.width = window.innerWidth;\n\t\t\tthis.canvasRef.current.height = window.innerHeight;\n\t\t});\n\n\t\tconst render = Render.create({\n\t\t\tcanvas: this.canvasRef.current,\n\t\t\tengine: this.props.engine,\n\t\t\toptions: {\n\t\t\t\twidth: window.innerWidth,\n\t\t\t\theight: window.innerHeight,\n\t\t\t\twireframes: true,\n\t\t\t\tshowAngleIndicator: true,\n\t\t\t\tshowCollisions: true,\n\t\t\t\tshowIds: true,\n\t\t\t\tshowDebug: true\n\t\t\t}\n\t\t});\n\t\t// add mouse control\n\t\tvar mouse = Mouse.create(render.canvas),\n\t\t\tmouseConstraint = MouseConstraint.create(this.props.engine, {\n\t\t\t\tmouse: mouse,\n\t\t\t\tconstraint: {\n\t\t\t\t\tstiffness: 0.2,\n\t\t\t\t\trender: {\n\t\t\t\t\t\tvisible: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\tWorld.add(this.props.engine.world, mouseConstraint);\n\t\tRender.run(render);\n\t}\n\n\trender() {\n\t\treturn <Canvas ref={this.canvasRef} />;\n\t}\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tmargin-bottom: 1.5rem;\n`;\n\nconst LogoWrapper = styled.div`\n\toverflow: auto;\n`;\n\nconst LogoText = styled.div`\n\tfloat: left;\n\tclear: left;\n\tfont-size: 1.5em;\n\tcolor: black;\n\tbackground-color: white;\n\tpadding: 0.2rem 0.3rem;\n\tmargin-top: 0.2rem;\n\tfont-family: \"Source Code Pro\", monospace;\n`;\n\nconst GitHubLogoWrapper = styled.a`\n\theight: 1.7rem;\n\tmargin-left: 1rem;\n\talign-self: flex-end;\n\t&:hover {\n\t\topacity: 0.8;\n\t}\n`;\nconst GitHubLogoSvg = styled.svg`\n\theight: 1.7rem;\n\talign-self: flex-end;\n`;\n\nconst Logo = () => (\n\t<Wrapper>\n\t\t<LogoWrapper>\n\t\t\t<LogoText>genetic</LogoText>\n\t\t\t<LogoText>playground </LogoText>\n\t\t</LogoWrapper>\n\t\t<GitHubLogoWrapper href=\"https://github.com/theochampion/genetic-playground\">\n\t\t\t<GitHubLogoSvg\n\t\t\t\tversion=\"1.1\"\n\t\t\t\tid=\"Capa_1\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\txmlnsXlink=\"http://www.w3.org/1999/xlink\"\n\t\t\t\tx=\"0px\"\n\t\t\t\ty=\"0px\"\n\t\t\t\tviewBox=\"0 0 512 512\"\n\t\t\t\txmlSpace=\"preserve\"\n\t\t\t>\n\t\t\t\t<g>\n\t\t\t\t\t<g>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tstyle={{ fill: \"#fff\" }}\n\t\t\t\t\t\t\td=\"M255.968,5.329C114.624,5.329,0,120.401,0,262.353c0,113.536,73.344,209.856,175.104,243.872\n\t\t\tc12.8,2.368,17.472-5.568,17.472-12.384c0-6.112-0.224-22.272-0.352-43.712c-71.2,15.52-86.24-34.464-86.24-34.464\n\t\t\tc-11.616-29.696-28.416-37.6-28.416-37.6c-23.264-15.936,1.728-15.616,1.728-15.616c25.696,1.824,39.2,26.496,39.2,26.496\n\t\t\tc22.848,39.264,59.936,27.936,74.528,21.344c2.304-16.608,8.928-27.936,16.256-34.368\n\t\t\tc-56.832-6.496-116.608-28.544-116.608-127.008c0-28.064,9.984-51.008,26.368-68.992c-2.656-6.496-11.424-32.64,2.496-68\n\t\t\tc0,0,21.504-6.912,70.4,26.336c20.416-5.696,42.304-8.544,64.096-8.64c21.728,0.128,43.648,2.944,64.096,8.672\n\t\t\tc48.864-33.248,70.336-26.336,70.336-26.336c13.952,35.392,5.184,61.504,2.56,68c16.416,17.984,26.304,40.928,26.304,68.992\n\t\t\tc0,98.72-59.84,120.448-116.864,126.816c9.184,7.936,17.376,23.616,17.376,47.584c0,34.368-0.32,62.08-0.32,70.496\n\t\t\tc0,6.88,4.608,14.88,17.6,12.352C438.72,472.145,512,375.857,512,262.353C512,120.401,397.376,5.329,255.968,5.329z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t</GitHubLogoSvg>\n\t\t</GitHubLogoWrapper>\n\t</Wrapper>\n);\n\nexport default Logo;\n","import styled from \"styled-components\";\n\nconst StatLine = styled.div`\n\tfont-size: 1em;\n\tcolor: white;\n\tfont-family: \"Source Code Pro\", monospace;\n\tmargin-top: 0.5em;\n`;\n\nexport default StatLine;\n","import styled from \"styled-components\";\n\nconst Overlay = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tz-index: 2;\n\tmargin: 3rem;\n\tdisplay: flex;\n\tjustify-content: space-between;\n`;\n\nexport default Overlay;\n","import styled from \"styled-components\";\n\nconst SettingsPanel = styled.div``;\n\nexport default SettingsPanel;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SettingInputLineWrapper = styled.div`\n\tmargin-bottom: 0.5rem;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: stretch;\n`;\n\nconst SettingName = styled.div`\n\tfont-size: 1em;\n\tcolor: white;\n\tfont-family: \"Source Code Pro\", monospace;\n`;\n\nconst SettingInput = styled.input`\n\tmargin-left: 0.5rem;\n\twidth: 4rem;\n\tpadding: 0.2rem 0.5rem;\n\tdisplay: inline-block;\n\tborder: 1px solid #333;\n\tbackground-color: transparent;\n\tfont-size: 1em;\n\tcolor: white;\n\tfont-family: \"Source Code Pro\", monospace;\n\toutline: none;\n\t&:disabled {\n\t\tborder-color: transparent;\n\t}\n`;\n\nconst SettingSelect = styled.select`\n\tmargin-left: 0.5rem;\n\twidth: 8rem;\n\tpadding: 0.2rem 0.5rem;\n\tdisplay: inline-block;\n\tborder: 1px solid #333;\n\t-webkit-appearance: none;\n\t-webkit-border-radius: 0px;\n\tbackground-color: transparent;\n\tfont-size: 1em;\n\tcolor: white;\n\tfont-family: \"Source Code Pro\", monospace;\n\toutline: none;\n\t&:disabled {\n\t\tborder-color: transparent;\n\t}\n`;\n\nconst SettingSelectOption = styled.option``;\n\nconst SettingInputLine = ({\n\ttext,\n\tname,\n\tvalue,\n\toptions,\n\tdisabled,\n\tonChange\n}) => {\n\treturn (\n\t\t<SettingInputLineWrapper>\n\t\t\t<SettingName>{`${text}:`}</SettingName>\n\t\t\t{options === undefined ? (\n\t\t\t\t<SettingInput\n\t\t\t\t\tname={name}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tvalue={value}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<SettingSelect\n\t\t\t\t\tname={name}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tvalue={value}\n\t\t\t\t>\n\t\t\t\t\t{options.map(option => (\n\t\t\t\t\t\t<SettingSelectOption key={option} value={option}>\n\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t</SettingSelectOption>\n\t\t\t\t\t))}\n\t\t\t\t</SettingSelect>\n\t\t\t)}\n\t\t</SettingInputLineWrapper>\n\t);\n};\n\nexport default SettingInputLine;\n","import styled from \"styled-components\";\n\nconst Divider = styled.div`\n\tpadding: 1rem;\n`;\n\nexport default Divider;\n","import styled from \"styled-components\";\n\nconst Button = styled.button`\n\tmargin-top: 1rem;\n\tpadding: 0.5rem 1rem;\n\tborder: 2px solid white;\n\tbackground-color: transparent;\n\tcolor: white;\n\tfont-size: 1rem;\n\tfont-family: \"Source Code Pro\", monospace;\n\tcursor: pointer;\n\toutline: none;\n\t&:hover {\n\t\topacity: 0.8;\n\t}\n`;\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst AuthorWrapper = styled.div`\n\talign-self: flex-end;\n\tfont-size: 0.8rem;\n\tcolor: white;\n\tfont-family: \"Source Code Pro\", monospace;\n`;\n\nconst AuthorLink = styled.a`\n\tcolor: white;\n\ttext-decoration: none;\n\t&:hover {\n\t\tcursor: pointer;\n\t\topacity: 0.8;\n\t}\n`;\n\nconst Author = () => (\n\t<AuthorWrapper>\n\t\tMade with&nbsp;\n\t\t<span role=\"img\" aria-label=\"heart\">\n\t\t\t❤️\n\t\t</span>\n\t\t&nbsp;by&nbsp;\n\t\t<AuthorLink href=\"https://github.com/theochampion\">\n\t\t\tThéo Champion\n\t\t</AuthorLink>\n\t</AuthorWrapper>\n);\n\nexport default Author;\n","import styled from \"styled-components\";\n\nconst VisPanel = styled.div``;\n\nexport default VisPanel;\n","import React from \"react\";\nimport styled from \"styled-components\";\n// components\nimport StatLine from \"./stat_line\";\n// utils\nimport { decodeFloatsFromBinaryStr } from \"../utils/string\";\n\nconst GenVisContainer = styled.div`\n\twidth: 300px;\n\tword-wrap: break-word;\n\tmargin-top: 0.5em;\n\tfont-size: 0.8em;\n\tcolor: white;\n\tfont-family: \"Source Code Pro\", monospace;\n`;\n\nconst GenBitChange = styled.span`\n\tfont-size: 1em;\n\tcolor: ${props => props.color};\n\tfont-family: \"Source Code Pro\", monospace;\n`;\n\nconst change_color_lookup = [\"#df2644\", \"#e96a7f\", \"#f19dab\", \"#fff\"];\n\nconst GenomeEvolutionVis = ({ genomes }) => {\n\tconst [current_genome] = genomes.slice(-1);\n\tconst genome_history = genomes.slice(-4, -1).reverse();\n\tconst current_params = decodeFloatsFromBinaryStr(current_genome, 3);\n\tconst params_history = genome_history.map(genome =>\n\t\tdecodeFloatsFromBinaryStr(genome, 3)\n\t);\n\treturn (\n\t\t<>\n\t\t\t<StatLine>Fittest individual:</StatLine>\n\t\t\t<StatLine>genome:</StatLine>\n\n\t\t\t<GenVisContainer>\n\t\t\t\t{Array.from(current_genome).map((bit, bit_idx) => {\n\t\t\t\t\tlet lastChange = change_color_lookup.length - 1;\n\t\t\t\t\tfor (const [gen_idx, genome] of genome_history.entries())\n\t\t\t\t\t\tif (Array.from(genome)[bit_idx] !== bit) {\n\t\t\t\t\t\t\tlastChange = gen_idx;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<GenBitChange key={bit_idx} color={change_color_lookup[lastChange]}>\n\t\t\t\t\t\t\t{bit}\n\t\t\t\t\t\t</GenBitChange>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</GenVisContainer>\n\t\t\t<StatLine>\n\t\t\t\t&nbsp;p_gain:&nbsp;&nbsp;&nbsp;&nbsp;i_gain:&nbsp;&nbsp;&nbsp;&nbsp;d_gain:\n\t\t\t</StatLine>\n\t\t\t<StatLine>\n\t\t\t\t{current_params.map((param, param_idx) => {\n\t\t\t\t\tlet lastChange = change_color_lookup.length - 1;\n\t\t\t\t\tfor (const [ex_p_idx, ex_param] of params_history.entries())\n\t\t\t\t\t\tif (ex_param[param_idx] !== param) {\n\t\t\t\t\t\t\tlastChange = ex_p_idx;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<GenBitChange\n\t\t\t\t\t\t\tkey={param_idx}\n\t\t\t\t\t\t\tcolor={change_color_lookup[lastChange]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{`${param.toFixed(7)}`}&nbsp;&nbsp;\n\t\t\t\t\t\t</GenBitChange>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</StatLine>\n\t\t</>\n\t);\n};\n\nexport default GenomeEvolutionVis;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst NegPerc = styled.span`\n\tfont-size: 1em;\n\tcolor: #d21f3c;\n\tfont-family: \"Source Code Pro\", monospace;\n`;\n\nconst EvolPercVis = ({ perc }) =>\n\tperc >= 0 ? (\n\t\t`+${perc.toFixed(1)}%`\n\t) : (\n\t\t<NegPerc>{`${perc.toFixed(1)}%`}</NegPerc>\n\t);\n\nexport default EvolPercVis;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { XYPlot, LineSeries, XAxis, YAxis } from \"react-vis\";\n\nconst StatPlotContainer = styled.div`\n\tmargin-top: 1rem;\n`;\n\nconst StatPlot = ({ best_fitness_data, avg_fitness_data }) => (\n\t<StatPlotContainer>\n\t\t<XYPlot width={300} height={200}>\n\t\t\t<LineSeries\n\t\t\t\tdata={best_fitness_data.map(p => ({ x: p.generation, y: p.fitness }))}\n\t\t\t\tcolor=\"red\"\n\t\t\t\tcurve={null}\n\t\t\t\topacity={1}\n\t\t\t\tstrokeStyle=\"solid\"\n\t\t\t\tstrokeWidth=\"1px\"\n\t\t\t/>\n\t\t\t<LineSeries\n\t\t\t\tdata={avg_fitness_data.map(p => ({ x: p.generation, y: p.fitness }))}\n\t\t\t\tcolor=\"red\"\n\t\t\t\tcurve={null}\n\t\t\t\topacity={0.9}\n\t\t\t\tstrokeStyle=\"dashed\"\n\t\t\t\tstrokeWidth=\"1px\"\n\t\t\t/>\n\t\t\t<XAxis\n\t\t\t\ttitle=\"generation\"\n\t\t\t\tstyle={{\n\t\t\t\t\tline: { stroke: \"#fff\" },\n\t\t\t\t\tticks: { stroke: \"#fff\" },\n\t\t\t\t\ttext: { stroke: \"none\", fill: \"#fff\", fontWeight: 600 },\n\t\t\t\t\ttitle: { stroke: \"none\", fill: \"#fff\", fontWeight: 600 }\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<YAxis\n\t\t\t\ttitle=\"fitness\"\n\t\t\t\tstyle={{\n\t\t\t\t\tline: { stroke: \"#fff\" },\n\t\t\t\t\tticks: { stroke: \"#fff\" },\n\t\t\t\t\ttext: { stroke: \"none\", fill: \"#fff\", fontWeight: 600 },\n\t\t\t\t\ttitle: { stroke: \"none\", fill: \"#fff\", fontWeight: 600 }\n\t\t\t\t}}\n\t\t\t/>\n\t\t</XYPlot>\n\t</StatPlotContainer>\n);\n\nexport default StatPlot;\n","import { increasePerc } from \"./math\";\n\nexport const getLastItem = arr => arr[arr.length - 1];\n\nexport const getFitnessStatPercIncrease = arr => {\n\tif (arr.length <= 2) return 0.0;\n\treturn increasePerc(arr[arr.length - 1].fitness, arr[arr.length - 2].fitness);\n};\n\nexport const statsToCSVFile = (best, avg) => {\n\tconst legend = `generation,best_fitness,average_fitness`;\n\tlet csv = \"\";\n\tbest.forEach(\n\t\t(d, idx) => (csv += `${d.generation},${d.fitness},${avg[idx].fitness}\\n`)\n\t);\n\n\tconsole.log(csv);\n\treturn encodeURI(`data:text/csv;charset=utf-8,${legend}\\n${csv}`);\n};\n","import React, { Component } from \"react\";\nimport seedrandom from \"seedrandom\";\n// simulator\nimport SimulatorEngine from \"./simulator/simulator_engine\";\n// genetic\nimport Genetic, { optimizers } from \"./genetic/genetic\";\nimport { individualSelectors, parentsSelectors } from \"./genetic/selectors\";\nimport { seed, mutate, crossover } from \"./genetic/genetic_config\";\n// components\nimport SimulatorRenderer from \"./simulator/simulator_renderer\";\nimport Logo from \"./components/logo\";\nimport StatLine from \"./components/stat_line\";\nimport Overlay from \"./components/overlay\";\nimport SettingsPanel from \"./components/settings_panel\";\nimport SettingInputLine from \"./components/setting_input\";\nimport Divider from \"./components/divider\";\nimport Button from \"./components/button\";\nimport Author from \"./components/author\";\nimport VisPanel from \"./components/vis_panel\";\nimport GenomeEvolutionVis from \"./components/genome_vis\";\nimport EvolPercVis from \"./components/evol_perc_vis\";\nimport StatPlot from \"./components/stat_plot\";\n// utils\nimport { decodeFloatsFromBinaryStr } from \"./utils/string\";\nimport {\n\tgetLastItem,\n\tgetFitnessStatPercIncrease,\n\tstatsToCSVFile\n} from \"./utils/misc\";\n\nconst settings = [\n\t{ text: \"Population Size\", name: \"population_size\" },\n\t{ text: \"Mutation rate\", name: \"mutation_rate\" },\n\t{ text: \"Crossover rate\", name: \"crossover_rate\" },\n\t{ text: \"Random seed\", name: \"random_seed\" }\n];\n\nconst default_seed = \"$qW8#@\";\n\nexport default class App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.isMobile = window.innerWidth <= 700;\n\t\tthis.state = {\n\t\t\t// settings\n\t\t\tindiv_selector: \"tournament3\",\n\t\t\tparent_selector: \"tournament3\",\n\t\t\tpopulation_size: 100,\n\t\t\tmutation_rate: 0.1,\n\t\t\tcrossover_rate: 0.6,\n\t\t\trandom_seed: default_seed,\n\t\t\t// simulation\n\t\t\tsimulationRunning: false,\n\t\t\tgeneration: 0,\n\t\t\tbest_genomes: [],\n\t\t\tbest_fitness_stat: [],\n\t\t\tavg_fitness_stat: []\n\t\t};\n\t\tthis.geneticEngine = new Genetic();\n\t\tthis.simulatorEngine = new SimulatorEngine();\n\n\t\tthis.geneticEngine.seed = seed;\n\t\tthis.geneticEngine.mutate = mutate;\n\t\tthis.geneticEngine.crossover = crossover;\n\t\tthis.geneticEngine.optimize = optimizers.maximize;\n\t\tthis.geneticEngine.selectIndividual =\n\t\t\tindividualSelectors[this.state.indiv_selector];\n\t\tthis.geneticEngine.selectParents =\n\t\t\tparentsSelectors[this.state.parent_selector];\n\n\t\tthis.geneticEngine.generation = (generation, population) => {\n\t\t\tthis.setState(pv => ({\n\t\t\t\tgeneration: generation + 1,\n\t\t\t\tbest_genomes: [...pv.best_genomes, population[0].genome],\n\t\t\t\tbest_fitness_stat: [\n\t\t\t\t\t...pv.best_fitness_stat,\n\t\t\t\t\t{ generation: generation, fitness: population[0].fitness }\n\t\t\t\t],\n\t\t\t\tavg_fitness_stat: [\n\t\t\t\t\t...pv.avg_fitness_stat,\n\t\t\t\t\t{\n\t\t\t\t\t\tgeneration: generation,\n\t\t\t\t\t\tfitness:\n\t\t\t\t\t\t\tpopulation\n\t\t\t\t\t\t\t\t.map(indiv => indiv.fitness)\n\t\t\t\t\t\t\t\t.reduce((a, b) => a + b, 0) / population.length\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}));\n\t\t};\n\n\t\t/**\n\t\t * Evaluate fitness by adding vehicle to the simulation\n\t\t * with the PID parameters decoded from the individual's chromosome.\n\t\t * Simulation will start when all vehicles are ready (preFitnessEval).\n\t\t * Result will be returned uppon vehicle destruction in the simulation\n\t\t * engine.\n\t\t */\n\t\tthis.geneticEngine.fitness = async chromosome => {\n\t\t\tconst [p_gain, i_gain, d_gain] = decodeFloatsFromBinaryStr(chromosome, 3);\n\t\t\treturn await this.simulatorEngine.addVehicle(p_gain, i_gain, d_gain);\n\t\t};\n\n\t\t/**\n\t\t * Launch simulation when all vehicle has been added to compute fitness.\n\t\t */\n\t\tthis.geneticEngine.preFitnessEval = () => {\n\t\t\tthis.simulatorEngine.run();\n\t\t};\n\t}\n\n\t_runSimulation = () => {\n\t\tthis.setState({\n\t\t\tavg_fitness_stat: [],\n\t\t\tbest_fitness_stat: [],\n\t\t\tbest_genomes: []\n\t\t});\n\t\tseedrandom(this.state.random_seed, { global: true });\n\t\tthis.geneticEngine.run({\n\t\t\titerations: 5000,\n\t\t\tpopulation_size: parseFloat(this.state.population_size),\n\t\t\tmutation_rate: parseFloat(this.state.mutation_rate),\n\t\t\tcrossover_rate: parseFloat(this.state.crossover_rate)\n\t\t});\n\t\tthis.setState({\n\t\t\tsimulationRunning: true\n\t\t});\n\t};\n\n\t_stopSimulation = () => {\n\t\tthis.geneticEngine.stop();\n\t\tthis.simulatorEngine.stop();\n\t\tthis.setState({ simulationRunning: false });\n\t};\n\n\t_handleSettingChange = e =>\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\n\t_downloadStatsAsCSV = () => {\n\t\tconst encodedCSV = statsToCSVFile(\n\t\t\tthis.state.best_fitness_stat,\n\t\t\tthis.state.avg_fitness_stat\n\t\t);\n\t\tconst exportName = `GP_export_${this.state.indiv_selector}_${\n\t\t\tthis.state.parent_selector\n\t\t}_${this.state.population_size}_${this.state.mutation_rate}_${\n\t\t\tthis.state.crossover_rate\n\t\t}_${this.state.random_seed}_${Date.now()}.csv`;\n\n\t\tconst link = document.createElement(\"a\");\n\t\tlink.setAttribute(\"href\", encodedCSV);\n\t\tlink.setAttribute(\"download\", exportName);\n\t\tdocument.body.appendChild(link);\n\t\tlink.click();\n\t\tdocument.body.removeChild(link);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Overlay>\n\t\t\t\t\t{(!this.isMobile || !this.state.simulationRunning) && (\n\t\t\t\t\t\t<SettingsPanel>\n\t\t\t\t\t\t\t<Logo />\n\t\t\t\t\t\t\t<Author />\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<SettingInputLine\n\t\t\t\t\t\t\t\ttext=\"Indiv selector\"\n\t\t\t\t\t\t\t\tname=\"indiv_selector\"\n\t\t\t\t\t\t\t\tvalue={this.state.indiv_selector}\n\t\t\t\t\t\t\t\toptions={Object.keys(individualSelectors)}\n\t\t\t\t\t\t\t\tdisabled={this.state.simulationRunning}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tthis.geneticEngine.selectIndividual =\n\t\t\t\t\t\t\t\t\t\tindividualSelectors[e.target.value];\n\t\t\t\t\t\t\t\t\tthis._handleSettingChange(e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<SettingInputLine\n\t\t\t\t\t\t\t\ttext=\"Parent selector\"\n\t\t\t\t\t\t\t\tname=\"parent_selector\"\n\t\t\t\t\t\t\t\tvalue={this.state.parent_selector}\n\t\t\t\t\t\t\t\toptions={Object.keys(parentsSelectors)}\n\t\t\t\t\t\t\t\tdisabled={this.state.simulationRunning}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tthis.geneticEngine.selectParents =\n\t\t\t\t\t\t\t\t\t\tparentsSelectors[e.target.value];\n\t\t\t\t\t\t\t\t\tthis._handleSettingChange(e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t{settings.map(({ text, name }) => (\n\t\t\t\t\t\t\t\t<SettingInputLine\n\t\t\t\t\t\t\t\t\tkey={name}\n\t\t\t\t\t\t\t\t\ttext={text}\n\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\tvalue={this.state[name]}\n\t\t\t\t\t\t\t\t\tdisabled={this.state.simulationRunning}\n\t\t\t\t\t\t\t\t\tonChange={this._handleSettingChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\tthis.state.simulationRunning\n\t\t\t\t\t\t\t\t\t\t? this._stopSimulation\n\t\t\t\t\t\t\t\t\t\t: this._runSimulation\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.simulationRunning ? \"Stop\" : \"Run\"}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</SettingsPanel>\n\t\t\t\t\t)}\n\t\t\t\t\t{this.state.simulationRunning && (\n\t\t\t\t\t\t<VisPanel>\n\t\t\t\t\t\t\t<StatLine>{`Generation: ${this.state.generation}`}</StatLine>\n\t\t\t\t\t\t\t<StatLine>\n\t\t\t\t\t\t\t\t{`Average fitness: ${getLastItem(\n\t\t\t\t\t\t\t\t\tthis.state.avg_fitness_stat\n\t\t\t\t\t\t\t\t).fitness.toFixed(2)} (`}\n\t\t\t\t\t\t\t\t<EvolPercVis\n\t\t\t\t\t\t\t\t\tperc={getFitnessStatPercIncrease(this.state.avg_fitness_stat)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t</StatLine>\n\t\t\t\t\t\t\t<StatLine>\n\t\t\t\t\t\t\t\t{`Best fitness: ${getLastItem(\n\t\t\t\t\t\t\t\t\tthis.state.best_fitness_stat\n\t\t\t\t\t\t\t\t).fitness.toFixed(2)} (`}\n\t\t\t\t\t\t\t\t<EvolPercVis\n\t\t\t\t\t\t\t\t\tperc={getFitnessStatPercIncrease(\n\t\t\t\t\t\t\t\t\t\tthis.state.best_fitness_stat\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t</StatLine>\n\t\t\t\t\t\t\t<StatPlot\n\t\t\t\t\t\t\t\tbest_fitness_data={this.state.best_fitness_stat}\n\t\t\t\t\t\t\t\tavg_fitness_data={this.state.avg_fitness_stat}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{!this.isMobile ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<GenomeEvolutionVis genomes={this.state.best_genomes} />\n\t\t\t\t\t\t\t\t\t<Button onClick={this._downloadStatsAsCSV}>\n\t\t\t\t\t\t\t\t\t\tDownload CSV\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\tthis.state.simulationRunning\n\t\t\t\t\t\t\t\t\t\t\t? this._stopSimulation\n\t\t\t\t\t\t\t\t\t\t\t: this._runSimulation\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.simulationRunning ? \"Stop\" : \"Run\"}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</VisPanel>\n\t\t\t\t\t)}\n\t\t\t\t</Overlay>\n\n\t\t\t\t<SimulatorRenderer engine={this.simulatorEngine.engine} />\n\t\t\t</>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"../node_modules/react-vis/dist/style.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}